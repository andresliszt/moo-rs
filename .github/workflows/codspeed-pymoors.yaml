name: CodSpeed - pymoors

on:
  push:
    branches:
      - "main"
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  DEFAULT_PYTHON: 3.12

jobs:
  benchmarks:
    name: Run benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: install rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          # enable-cache: true
          working-directory: pymoors
          activate-environment: true

      - name: Install deps
        working-directory: pymoors
        run: |
          uv sync --group testing

      - name: build pymoors optimized wheel
        id: build
        uses: PyO3/maturin-action@v1
        with:
          manylinux: auto
          args: --release --out dist --interpreter ${{ env.DEFAULT_PYTHON }}
          rust-toolchain: stable
          working-directory: pymoors

      - name: Find built wheel (full path)
        id: find_wheel
        run: |
          echo "üîç Current working directory: $(pwd)"
          echo "üìÇ Contents of pymoors/dist/:"
          echo "VIRTUAL_ENV: $(VIRTUAL_ENV)"
          ls -lah pymoors/dist

          # Grab the relative path and resolve it to an absolute path
          WHEEL_RELATIVE=$(ls pymoors/dist/*.whl)
          WHEEL_FULL=$(realpath "$WHEEL_RELATIVE")

          echo "üì¶ Wheel (relative): $WHEEL_RELATIVE"
          echo "üì¶ Wheel (absolute): $WHEEL_FULL"
          echo "wheel=$WHEEL_FULL" >> $GITHUB_OUTPUT
        shell: bash

      - name: Install built wheel and inspect venv location
        working-directory: pymoors
        run: |
          echo "üèóÔ∏è Creating virtual environment with uv venv"
          echo "VENV = $VIRTUAL_ENV"
          echo "üîç Checking for venv and .venv in current directory (pymoors/)"
          for d in venv .venv; do
            if [ -d "$d" ]; then
              echo "‚úÖ Found pymoors/$d"
            else
              echo "‚ùå pymoors/$d not found"
            fi
          done

          echo "üîç Checking for venv and .venv in repository root"
          for d in venv .venv; do
            if [ -d "${GITHUB_WORKSPACE}/$d" ]; then
              echo "‚úÖ Found $d in repo root"
            else
              echo "‚ùå $d not found in repo root"
            fi
          done
          echo "üì¶ Wheel path from step output: '${{ steps.find_wheel.outputs.wheel }}'"
          echo "üì¶ Installing the built wheel"
          uv pip install --no-build-isolation --force-reinstall "file://${{ steps.find_wheel.outputs.wheel }}"
          echo "VENV = $VIRTUAL_ENV"

      - name: Run benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          working-directory: pymoors
          run: |
            uv run pytest tests/benchmarks --codspeed
        env:
          CODSPEED_RUNNER_MODE: "walltime"
